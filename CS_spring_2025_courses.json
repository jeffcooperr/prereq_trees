[
  {
    "course_code": "CS 1080",
    "section": "Section A, CRN 10727",
    "title": "Intro to Web Site Dev",
    "credit_hours": "3",
    "meeting_info": "TTh 4:25pm-5:40pm in LAFAYETTE HALL L107 (1/13 to 5/2)",
    "instructor": "Murat Gungor",
    "description": "Provides a strong foundation in HTML, CSS, images, beginning web programming, and web design so that the student can create a complete functional web site in a team based final project.",
    "section_description": "Lays a foundation in website coding with HTML, CSS, JavaScript, images, and basic web design, empowering students to create a functional website.",
    "section_expectations": "Assumes no prior experience with programming.",
    "evaluation": "Homework, quizzes, exams, lab exercises, final project",
    "soc_comments": "Open to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 1210",
    "title": "Computer Programming I",
    "credit_hours": "3",
    "description": "Introduction to algorithmic problem solving and computer programming. Designed to provide a foundation for further studies in computer science.",
    "soc_comments": "Varies by section",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 1320",
    "section": "Section A, CRN 15223",
    "title": "Puzzles, Games & Algorithms",
    "credit_hours": "3",
    "meeting_info": "MWF 1:10pm-2pm in LAFAYETTE HALL L102 (1/13 to 5/2)",
    "instructor": "Lisa Dion",
    "description": "Introductory computer science through exploration and analysis of mathematical puzzles and games, and the algorithms that handle them. Prerequisite: No credit if taken after CS 2100.",
    "section_description": "In this course, you will explore computational thinking through the analysis of mathematical puzzles and games, and the algorithms that handle them. Learning objectives include:\n- To engage in productive struggle and data collection to solve common puzzles and understand common mathematical games through computational thinking\n- To understand, appreciate, and communicate various approaches and algorithms to solving the games and puzzles\n- To connect the puzzles and games to real-world applications and transfer the knowledge and understanding to help shape real-world decisions and actions",
    "section_expectations": "This course is taught in an active learning style, so class attendance will be crucial. You will be expected to work for 6 hours outside of class each week, per University policy regarding work required for a 3 credit hour course.",
    "evaluation": "This course is taught using a points-based system. Each week a few assignments will be released, with varying formats and point values. Your final grade will be based on the number of points you accumulate by the end of the semester.",
    "soc_comments": "Open to Degree and PACE students;\nNo credit if taken after CS 2100",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 1640",
    "title": "Discrete Structures",
    "credit_hours": "3",
    "instructor": "Joan Rosebush",
    "description": "Introduction to analytic and formal methods of computer science with practical examples, including analysis or data structures, recursion relations, proof methods, and logic programming. Credit not awarded for both CS 1640 and MATH 2055. Prerequisites: CS 1210 or CS 2100; MATH 1234 or MATH 1242.",
    "soc_comments": "Prereqs enforced by the system: CS 1210 or 2100;\nand MATH 1234 or 1242;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 1870",
    "title": "Intro to Data Science",
    "credit_hours": "3",
    "instructor": "Jacob Martin",
    "description": "Basic techniques of data harvesting and cleaning; association rules, classification and clustering; analyze, manipulate, and visualize data using programming languages. Basic principles of probability and statistical modeling/inference to make meaning out of large datasets. Credit not awarded after STAT 3000 or greater. Cross-listed with: STAT 1870.",
    "section_description": "This course is an introduction to the field of Data Science for students with no experience in computer coding and statistics.",
    "section_expectations": "In this course, you will learn to:\n\u2022 Analyze and manipulate data with the computer language, R \n\u2022 Understand the basic principles of probability and statistical modeling\n\u2022 Enable you to make meaning out of large data sets \n\u2022 Make better-informed decisions in business, research, and life.",
    "evaluation": "Students are assessed using Homework, Quizzes, and exams",
    "soc_comments": "Varies by section",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 1993",
    "section": "Section A, CRN 16373",
    "title": "IS:Quadcopter Design",
    "credit_hours": "1",
    "instructor": "Jason Hibbeler",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "soc_comments": "Instructor permission required",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 1994",
    "title": "Teaching Assistantship",
    "credit_hours": "1 to 3",
    "description": "Assist in instruction of undergraduate computer science courses under the direct supervision of a faculty member. Instructor permission required.",
    "soc_comments": "Varies by section",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 2100",
    "title": "Intermediate Programming",
    "credit_hours": "4",
    "description": "Intermediate programming concepts including common data structures, algorithms, style, design, documentation, testing and debugging techniques, and an introduction to object-oriented programming. Prerequisite: CS 1210 with a grade of C- or better.",
    "soc_comments": "Varies by section",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 2210",
    "title": "Computer Organization",
    "credit_hours": "3",
    "instructor": "James Eddy",
    "description": "Introduction to computer system organization including performance, assembly language, machine-level data representation, arithmetic for computers, processor datapath control, memory, and input/output. Includes significant semester project. Cross-listed with: CMPE 2210. Prerequisite: CS 2100.",
    "section_description": "Introduction to computer system organization including performance, assembly language, machine-level data representation, arithmetic for computers, processor datapath control, memory, and input/output. \n\nLearning Objectives:\nGain exposure to computer history and technology development\nBe introduced to the integrated circuit fabrication process\nUnderstand basic components of modern computer systems\nDemonstrate functional use of Linux operating system\nUnderstand fundamental concepts of computer architectures\nUnderstand machine level data representation\nGain exposure to arithmetic and logic operations\nUnderstand memory hierarchy and addressing\nUnderstand the basic function and ISA of an ARM processor\nDemonstrate ability to write simple programs in assembly language\nGain exposure to Input / Output operations\nDevelop a comprehensive final project using the Raspberry Pi",
    "section_expectations": "Students are required to purchase a Raspberry Pi Kit (custom designed) from the UVM Bookstore (~$140). Students will be connecting the RPi's to their laptops via Ethernet, thus also expect to purchase an Ethernet adapter (such as Ethernet-USB or Ethernet-Thunderbolt) for your computer (if you need one).",
    "evaluation": "The course grade is comprised of a variety of assignments, labs, a midterm exam, a final exam, and a significant course project (35% of course grade).",
    "soc_comments": "Prereqs enforced by the system: CS 2100;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 2240",
    "title": "Data Struc & Algorithms",
    "credit_hours": "3",
    "description": "Design and implementation of linear structures, trees and graphs. Examples of common algorithmic paradigms. Theoretical and empirical complexity analysis. Sorting, searching, and basic graph algorithms. Prerequisites: CS 2100 with a grade of C- or better; minimum Sophomore standing.",
    "section_description": "You will learn the common data structures for abstract data types and algorithms, including lists, trees, heaps, sorting, hashing, and disjoint set finding/uniting. You will also consider and compare their performances.\nCourse goals and objectives:\n1) You will gain knowledge of different data structures and recognize the use cases for each.\n2) You will consider not just whether algorithms function correctly or not, but also their efficiency and performance as the amount of data grows.\n3) You will use the C++ programming language to collect data with and analyze data structures and algorithms.",
    "section_expectations": "This class is run lecture-style with practice problems and active learning activities sprinkled throughout. You will be expected to work for 6 hours outside of class each week, per University policy regarding work required for a 3 credit hour course.",
    "evaluation": "Your final grade will be based on quizzes, programming projects, active learning activities, surveys, and a final exam.",
    "soc_comments": "Prereqs enforced by the system: C- or better in CS 2100;\nMinimum sophomore standing;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 2250",
    "title": "Computability& Complexity",
    "credit_hours": "3",
    "description": "Formal languages and expressiveness. Turing completeness and Church's Thesis. Decidability and tractability. Complexity classes and theory of NP completeness. Prerequisites: CS 1640 or MATH 2055. Co-requisite: CS 2240.",
    "soc_comments": "Prereqs enforced by the system: CS 1640 or MATH 2055;\nCoreq: CS 2240;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 2300",
    "title": "Advanced Programming",
    "credit_hours": "3",
    "instructor": "Lisa Dion",
    "description": "Builds programming maturity and proficiency through significant projects with spiral development, including program specification, design, implementation, debugging, testing, validation, internal and external documentation. Focus on advanced topics including efficiency, profiling, modularity, extensibility, programming paradigms, design patterns, memory management, and generics. Prerequisite: CS 2240.",
    "section_description": "This project-based course is separated into four modules. You will learn the details of C++ through a mixture of guided and open-ended projects, oral/written assignments, and other activities. An emphasis will be put on creativity and collaboration.\n\nCourse goals and objectives include:\n1) To master C++ programming.\n2) To expand programming knowledge to projects that require multiple languages.\n3) To explore event-based programming through C++ graphics projects.\n4) To develop the skills necessary to effectively collaborate in teams.",
    "section_expectations": "Every three-week module will be themed and will have lectures, active learning activities, and assignments associated with it. You will be expected to work for 6 hours outside of class each week, per University policy regarding work required for a 3 credit hour course.",
    "evaluation": "This course uses a point-based grading system, where you get to choose which assignments you want to complete to earn points towards your final grade.",
    "soc_comments": "Prereqs enforced by the system: CS 2240;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 2500",
    "section": "Section A, CRN 15350",
    "title": "Intro to Database Systems",
    "credit_hours": "3",
    "meeting_info": "MW 3:30pm-4:45pm in INNOVATION HALL E204 (1/13 to 5/2)",
    "instructor": "Jackie Horton",
    "description": "Serves as a foundational course in modern database systems. Introduces the fundamental concepts and techniques of relational database management, data modeling, relational algebra, structured query language, database design and database management.  Practical experience will be gained through a series of labs and projects. Credit not awarded after CS 3040 or CS 5040. Prerequisites: CS 1210; minimum Sophomore standing. Pre/Co-requisites: CS 1210; minimum Sophomore standing.",
    "section_description": "This course will serve as a foundational course in modern database systems. Students will be introduced to the fundamental concepts and techniques of relational database management, data modeling, relational algebra, structured query language, database design and database management.  The course will make extensive use of Python to interface with SQLite. Practical experience will be gained through a series of labs and projects.  Credit not awarded after CS 3040 or CS5040.\n\nPre-req:  CS21/CS1210 and sophomore standing.  Strong Python skills will be required.",
    "soc_comments": "Prerq enforced by the system: CS 1210",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 2660",
    "section": "Section OL1, CRN 13681",
    "title": "Cybersecurity Principles",
    "credit_hours": "3",
    "instructor": "James Eddy",
    "description": "Introduction to cybersecurity, fundamental security design principles, programming flaws, malicious code, web and database security, cryptography algorithms and hashing functions; overview of computer networks and common network threat vectors. Prerequisites: CS 2210 with a grade of C- or better.",
    "section_description": "This course builds a strong foundation in the principles of cybersecurity. Topics include an introduction to cybersecurity, fundamental security design principles, programming flaws, malicious code, web and database security; as well as common cryptography algorithms and hashing functions. The course concludes with an overview of computer networks and common network threat vectors. Prior programming experience is expected, particularly proficiency in Python. Prerequisites: CS 1080 (web development), CS 1210 (Python) and CS 2100 (OOP Java)",
    "section_expectations": "Learning Objectives:\nUnderstand key concepts/terms, such as threats, vulnerabilities, and controls\nUnderstand fundamental security design principles\nUnderstand confidentiality, integrity, and availability\nBe able to identify common authentication methods\nBe able to identify common access controls\nGain exposure to the types of programming flaws that introduce vulnerabilities\nUnderstand web security best practices and common threats\nUnderstand database security best practices and injection threats\nIdentify common cryptographic algorithms\nUnderstand the technique of password hashing and salting\nGain a solid foundation of computer network principles, protocols, and security",
    "evaluation": "The course grade is comprised of a variety of assignments, a final exam/project, and concept assignments.",
    "soc_comments": "Prereqs enforced by the system: CS 2100 with a\ngrade of C- or better and CS 1080;\nAsynchronous Online Course;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 2870",
    "section": "Section A, CRN 12920",
    "title": "Basics of Data Science",
    "credit_hours": "3",
    "meeting_info": "TTh 2:50pm-4:05pm in VOTEY BLDG 307 (1/13 to 5/2)",
    "instructor": "David Rockoff",
    "description": "Basic data science techniques, from import to cleaning to visualizing and modeling, using the R language. Machine learning methods include regression, classification and clustering algorithms. Programming methods include user-defined functions. Prerequisite: STAT 1110, STAT 1410, or STAT 2430. Cross-listed with: STAT 2870.",
    "section_description": "Basic data science techniques, from import to cleaning to visualizing and modeling, using the R language. Machine learning methods include regression, classification and clustering algorithms. Programming methods include user-defined functions.",
    "section_expectations": "At the end of the course, students will be expected to know how to construct the appropriate visuals for data using the ggplot2 package, manipulate data frames using base R and the Tidyverse packages, write custom functions, perform loops, and build/improve models using machine learning techniques.\nNo programming experience required.",
    "evaluation": "Students will be assessed by homeworks, in-class quizzes, and a group project.",
    "soc_comments": "Prereqs enforced by the system: STAT 1110 or\nSTAT 1410 or STAT 2430;\nOpen to Degree and PACE students;\nCrosslisted with STAT 2870 A;\nTotal combined enrollment: 56",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 2920",
    "section": "Section A, CRN 12434",
    "title": "SL:Girls Who Code",
    "credit_hours": "1",
    "meeting_info": "Sa 9:30am-12:30pm in WATERM 113Q (1/13 to 5/2)",
    "instructor": "Lisa Dion",
    "description": "Service learning experience that benefits the University or the Community under the direction of a CS faculty member. Prerequisite: Instructor permission.",
    "section_description": "This is for students who help facilitate the UVM Girls Who Code club on Saturday mornings. We teach local K-12 girls the basics in programming.",
    "section_expectations": "You will be expected to attend the club every Saturday, participate in reflections and planning before and after each session, and lead the session a few times during the semester.",
    "evaluation": "You will be evaluated based on attendance, completion of tasks, being a good role model for the girls, lesson planning, and leadership.",
    "soc_comments": "Instructor permission required;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 2990",
    "section": "Section A, CRN 15436",
    "title": "Intro Artificial Intelligence",
    "credit_hours": "3",
    "meeting_info": "MWF 2:20pm-3:10pm in LAFAYETTE HALL L411 (1/13 to 5/2)",
    "instructor": "Clayton Cafiero",
    "description": "See Schedule of Courses for specific titles. Prerequisite: Instructor permission.",
    "section_description": "An introduction to artificial intelligence including logic and rule based approaches, heuristic search, A*, IDA*, minimax, alpha/beta pruning, expectiminimax, Markov models and Markov decision processes (MDPs), decision tree, ensemble learning / random forest, the neural model and simple multi-layer perceptrons. Other topics, if any, may vary.",
    "section_expectations": "Prior knowledge of material from CS 1640 Discrete Structures (or equivalent) and CS 2240 Data Structures and Algorithms. CS2240 prerequisite (but instructor permission not required)",
    "evaluation": "Weekly quizzes, frequent active learning exercises, occasional homework (4--6 over semester), midterm and final.",
    "soc_comments": "Prereq: CS 2240 with a grade of C- or better;\nSpecial Topics courses cannot carry CC designations.",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 2994",
    "title": "Teaching Assistantship",
    "credit_hours": "Varies by section",
    "description": "Undergraduate student service as a teaching assistant, usually in an introductory-level course in the discipline, for which credit is awarded. Offered at department discretion.",
    "soc_comments": "Varies by section",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 2995",
    "section": "Section A, CRN 16560",
    "title": "Undergraduate Research",
    "credit_hours": "1 to 18",
    "instructor": "Nicholas Cheney",
    "description": "Undergraduate student work on individual or small team research projects under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "soc_comments": "Credits: 1-6",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3010",
    "section": "Section A, CRN 12308",
    "title": "Operating Systems",
    "credit_hours": "3",
    "meeting_info": "MWF 2:20pm-3:10pm in VOTEY BLDG 207 (1/13 to 5/2)",
    "instructor": "Jason Hibbeler",
    "description": "Supervisory and control software for multiprogrammed computer systems. Processes, threads, synchronization, interprocess communication, scheduling, memory management, resource allocation, performance evaluation, secondary storage, case studies. Prerequisites: CS 2300 and CS 2210.",
    "section_description": "CS 3010 will provide a broad overview of operating systems, focused primarily on Linux.  We will pursue an in-depth investigation of the following topics: the OS kernel and kernel mode; concurrency and threads; synchronization, CPU scheduling, memory management, I/O devices, and file-system management.\n\nFrom this course, students will become proficient in developing system-level programs in C, on Linux.\n\nThe text will be Operating System Concepts: Principles and Practice, 2nd Edition, by Anderson and Dahlin.",
    "section_expectations": "Students will learn concepts by creating several C programs on Linux that apply the various concepts from class.  There will be a midterm exam and a final exam and several short take-home quizzes covering concepts from the lectures.",
    "evaluation": "Course grades will be based on the midterm and final exams; the programming projects; take-home quizzes covering concepts from the lectures; and attendance.",
    "soc_comments": "Prereqs enforced by the system: CS 2300 & CS 2210;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3020",
    "section": "Section A, CRN 12644",
    "title": "Compiler Construction",
    "credit_hours": "3",
    "meeting_info": "MWF 10:50am-11:40am in KALKIN BUILDING 004 (1/13 to 5/2)",
    "instructor": "Joseph Near",
    "description": "Covers the design and construction of compilers and translation of high-level programming languages to assembly language. Topics include code representation, register allocation, optimization, static analysis, mutable data, garbage collection, and compilation of higher-order language features. Prerequisites: CS 2240, CS 2250.",
    "section_description": "This course covers the design and construction of compilers. You'll learn learn how to translate a series of high-level programming languages all the way into Intel x86 assembly language.\n\nThe course will be taught using Python and Intel x86 assembly language.\n\nInstead of learning about each phase of the compilation process sequentially, we'll start by compiling a tiny language directly into assembly code. Each week, we'll add a new feature to our language, and learn about all the phases needed to compile that feature into assembly. At each step, you'll have a functioning compiler that can run real code; by the end of the course, your compiler will work on a realistic programming language including first-class functions.\n\nTopics covered include:\n1. representation and analysis of code\n2. register allocation\n3. static type checking\n4. garbage collection\n5. code generation\n6. optimization",
    "section_expectations": "This course will be structured around lectures and a weekly programming assignment. Each lecture will cover a new language feature and the techniques needed to compile it; in the corresponding programming assignment, you will implement support for the new feature in your own compiler. Students should expect to spend 5-6 hours per week outside of class on the weekly programming assignments. Programming assignments will be completed in Python. The required materials for this course are all freely available online.",
    "evaluation": "Your grade will be based on weekly programming assignments, in-class exercises, and a final project.",
    "soc_comments": "Prereqs enforced by they system: CS 2240 & CS 2250;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3050",
    "section": "Section A, CRN 12007",
    "title": "Software Engineering",
    "credit_hours": "3",
    "meeting_info": "MWF 3:30pm-4:20pm in LAFAYETTE HALL L300 (1/13 to 5/2)",
    "instructor": "Jason Hibbeler",
    "description": "Treatment of software engineering problems and principles, with a focus on iterative software development. A significant part of the course is devoted to two multi-week team projects. Prerequisite: CS 2300.",
    "section_description": "CS 3050 will present a broad overview of the many activities involved in software engineering.  In particular, we will devote particular attention requirements engineering and to iterative software development.  We will also cover additional topics including design and implementation, verification, evolution, and software maintenance.  Students will learn and make use of automated frameworks for analyzing, testing, and documenting source code.\n\nStudents will acquire the skills needed to work constructively in an agile framework (Kanban, Scrum) on a large-scale team project and will learn to use git effectively.\n\nThe recommended text is Essentials of Software Engineering, by Tsui, Karam, and Bernal (ISBN 1284106004).",
    "section_expectations": "There will be three individual in-class coding challenges, a short team programming project, and large team programming project that will span approximately half the semester.  There will be two exams.  Students must be able to work effectively as part of a team.",
    "evaluation": "Course grades will be based on in-class coding challenges, on the exams, and on the two team projects.  The team projects will count for the majority of the course grade.  In addition, students will present material in writing and orally in class, and these presentations will count towards the course grade.  Students will also be evaluated on their ability to work as part of the team.  Class attendance will also count towards the course grade.",
    "soc_comments": "Prereqs enforced by the system: CS 2300;\nProject presentation session: Feb 13th, 6-9 PM;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3060",
    "section": "Section A, CRN 10640",
    "title": "Evolutionary Robotics",
    "credit_hours": "3",
    "meeting_info": "TTh 8:30am-9:45am in INNOVATION HALL E430 (1/13 to 5/2)",
    "instructor": "Joshua Bongard",
    "description": "Exploration of the automated design of autonomous machines using evolutionary algorithms. Coursework involves reading of research papers, programming assignments and a final project. Credit not awarded for both CS 3060 and CS 5060. Prerequisites: Junior standing and programming experience, or Instructor permission.",
    "section_description": "See link above.",
    "section_expectations": "See link above.",
    "evaluation": "See link above.",
    "soc_comments": "Prereq: Junior standing and programming experience\nor instructor permission; Co-located with CS 5060 A,\nBME 5990 D, CSYS 5990 A;\nTotal combined enrollment: 60;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3220",
    "section": "Section A, CRN 10148",
    "title": "Computer Architecture",
    "credit_hours": "3",
    "meeting_info": "MWF 1:10pm-2pm in KALKIN BUILDING 003 (1/13 to 5/2)",
    "instructor": "Jason Hibbeler",
    "description": "Architecture of computing systems. Control unit logic, input/output processors and devices, asynchronous processing, concurrency, parallelism, and memory hierarchies. Credit not awarded for both CS 3220 and CS 5220. Cross-listed with: CMPE 3220. Prerequisite: CMPE 2210 or CS 2210.",
    "section_description": "CS 3220 will provide a thorough and sophisticated examination of various hardware aspects of modern computers, including: virtual memory; instruction-set architectures; instruction-level parallelism through pipelining; caches and cache coherence; threads; vector processors; GPUs and the CUDA platform; and quantum computing if time allows.",
    "section_expectations": "Students will do written exercises; create software programs  that explore different areas of computer hardware; write short assembly-language programs; and write CUDA programs to learn and apply concepts of GPU-based software development.  Students will have the option of using a system in the Deep Green Cluster of the Vermont Advanced Computing Core for the GPU-based development.",
    "evaluation": "Student grades will be based on the exams, the written assignments, the programming projects, and attendance.",
    "soc_comments": "Prereqs enforced by the system: CS 2210;\nOpen to Degree and PACE students;\nCo-located with CS 5220 A;\nTotal combined enrollment: 40",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3240",
    "title": "Algorithm Design & Analysis",
    "credit_hours": "3",
    "description": "Comprehensive study of algorithms including greedy algorithms, divide and conquer, dynamic programming, graph algorithms and network flow. Computational intractability. Approximation, local search and randomization. Credit not awarded for both CS 3240 and CS 5240. Prerequisite: CS 2240. Pre/co-requisites: Recommended: CS 2250; STAT 2430, or STAT 2510.",
    "soc_comments": "Varies by section",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3540",
    "section": "Section A, CRN 12837",
    "title": "Machine Learning",
    "credit_hours": "3",
    "meeting_info": "MWF 8:30am-9:20am in INNOVATION HALL E210 (1/13 to 5/2)",
    "instructor": "Samuel Chevalier",
    "description": "Introduction to machine learning algorithms, theory, and implementation, including supervised and unsupervised learning; topics typically include linear and logistic regression, learning theory, support vector machines, decision trees, backpropagation artificial neural networks, and an introduction to deep learning. Includes a team-based project. Credit not awarded for both CS 3540 and CS 5540. Prerequisites: STAT 2510 or STAT 5510; MATH 2522 or MATH 2544.",
    "section_description": "This course offers an introduction to machine learning and statistical pattern recognition algorithms. It includes a wide array of topics, including supervised learning (covering linear regression, logistic regression, neural networks, support vector machines, decision trees, ensemble models, and random forests), unsupervised learning (clustering, dimensionality reduction, principal component analysis, and kernel methods), and deep learning (featuring convolutional neural networks, basic recurrent neural networks, and LSTMs). We will also introduce data-driven modeling techniques which are useful in the engineering and physical science domains (e.g., physics informed neural networks, neural ODEs, Bayesian neural networks, etc). You will also gain valuable insights and guidance on effectively implementing machine learning algorithms.",
    "section_expectations": "Weekly assignments, Term Project and two Mid-term exams.",
    "evaluation": "\u2022 Assigned homework (30%)\n\u2022 Term Project (30%)\n\u2022 Mid term exams (40%). Two exams will be given during the semester, no final exam.",
    "soc_comments": "Prereqs enforced by the system: STAT 2510 or 5510, and\nMATH 2522 or 2544;\nCo-located with CS 5540 , CSYS 5990,\nTotal combined enrollment: 50;\nOpen to Degree and PACE students;",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3559",
    "section": "Section A, CRN 16143",
    "title": "Cryptography",
    "credit_hours": "3",
    "meeting_info": "TTh 11:40am-12:55pm in PERKINS BUILDING 102 (1/13 to 5/2)",
    "instructor": "Christelle Vincent",
    "description": "A survey of classical and modern cryptography. Topics include the strengths and weaknesses of various cryptosystems, specific public-key and private-key cryptosystems such as RSA, ElGamal, and elliptic curve cryptosystems, as well as digital signatures and key exchange. Prerequisites: MATH 2055 or CS 1640; MATH 2248, MATH 2522, or MATH 2544. Cross-listed with: MATH 3559.",
    "section_description": "This semester's Cryptography course will begin with a short historical overview of modern cryptography, and some mathematical and complexity theory preliminaries. It will be followed by a brief study of quantum computing with an eye towards algorithms that are expected to have impacts on cryptography. Then we will study lattices and the Learning With Errors problem for the remainder of the semester.",
    "section_expectations": "This class will meet in person and the lecture will be streamed on Teams and recorded. Class time will be spent lecturing. Students should expect to spend 6-8 hours per week on this course outside of class time. There are no required textbooks for the course, though books will be suggested as we cover the material. This will be supplemented by free course notes.",
    "evaluation": "This course will have a flexible evaluation scheme, allowing students some freedom in which course activities they complete for course credit, and with the option of completing more activities for a higher grade. This will allow students with a mathematical background or a programming background to choose assignments based on their strengths or the skills they want to develop. Students will choose their assignments from pre-defined lists for each module of the course, which may include definitions quizzes, proof-writing assignments, short essays, technical paper summaries, and programming assignments (in Python or Sage). There will be no timed or proctored assignments.",
    "soc_comments": "Prereqs enforced by the system: MATH 2055 or CS 1640; and\nMATH 2248, MATH 2522, or MATH 2544;\nCrosslisted with MATH 3559; Total combined enrollment: 45",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3870",
    "section": "Section A, CRN 12621",
    "title": "Data Science I - Pinnacle",
    "credit_hours": "3",
    "meeting_info": "TTh 10:05am-11:20am in MORRILL HALL 010 (1/13 to 5/2)",
    "instructor": "Jacob Martin",
    "description": "Data harvesting, cleaning, and summarizing; working with non-traditional, non-numeric data (social network, natural language textual data, etc.); scientific visualization; advanced data pipelines; Project-based. Credit not awarded for both CS 3870 and CS 5870. Prerequisites: CS 1210; STAT 1410 or STAT 2430; CS 2100 and MATH 2522 or MATH 2544 recommended. Cross-listed with: STAT 3870.",
    "soc_comments": "Prereqs enforced by the system: CS 1210 and\nSTAT 1410 or 2430;\nCS 2100 and MATH 2544 recommended;\nCrosslisted with STAT 3870 A;\nTotal combined enrollment: 40;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3880",
    "section": "Section A, CRN 13482",
    "title": "Statistical Learning",
    "credit_hours": "3",
    "meeting_info": "TTh 2:50pm-4:05pm in WATERMAN BLDG 401 (1/13 to 5/2)",
    "instructor": "Richard Single",
    "description": "Statistical learning methods and applications to modern problems in science, industry, and society. Topics include: linear model selection, cross-validation, lasso and ridge regression, tree-based methods, bagging and boosting, support vector machines, and unsupervised learning. Prerequisites: STAT 3210 or equivalent. Cross-listed with: STAT 3880.",
    "section_description": "This will be a primarily flipped class, where you will be responsible for reading & viewing the text & pre-class videos before working on the material in class. This pre-class work will be assessed each day. \n\nThe class will consist of a mixture of lecture, discussion, and projects to highlight particular topics. It would be impossible, however, for these to encompass all of the material for the course. There will be material in the text for which you will be responsible that we will not cover explicitly in class. I expect that you will read the material in the text before we discuss it in class. \n\nKey topics are:\n*Multiple linear regression \n*Classification \n - logistic regression \n - linear & quadratic discriminant analysis \n - naive bayes \n - k-nearest neighbors \n*Resampling methods \n - leave-one-out cross-validation \n - k-fold cross-validation \n*Decision trees \n - classification & regression trees \n - bagging, boosting, random forests \n*Principal components \n*Model selection & regularization \n - subset selection \n - shrinkage methods (ridge regression & lasso)",
    "section_expectations": "Students should expect three or more hours of work outside of class for every hour of class time. Reading the text and viewing pre-class videos for each class will be an ongoing homework assignment throughout the course. Homework assignments will be listed on the class webpage. Late assignments will not be accepted.",
    "evaluation": "Final grades will be determined by exams/quizzes, homework, and participation in class work and discussions",
    "soc_comments": "Prereqs enforced by the system: STAT 3210;\nCrosslisted with STAT 3880 A;\nTotal combined enrollment: 30;\nOpen to Degree and PACE students",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3920",
    "title": "Senior Seminar",
    "credit_hours": "1",
    "description": "Oral presentations that pertain to the ethical practice of computer science in government, industry, and academia. Topics may include computer security, copyright, and patent law. Prerequisite: Senior standing in Computer Science.",
    "section_description": "This course explores ethics at the intersection of society and technology.\nCourse goals and objectives:\n1) You will explore the ethical dilemmas and societal impacts of computer technologies. \n2) You will write about events and dilemmas related to technology and society. \n3) You will participate in debates and discussions regarding these topics.\n4) You will participate in service that helps someone outside of Computer Science learn about technology.",
    "section_expectations": "The first half of the semester is run debate-style with time for classroom discussions. The second half of the semester has discussion groups. You will be expected to work for 2 hours outside of class each week, per University policy regarding work required for a 1 credit hour course.",
    "evaluation": "Grading is based on participating in debates and discussions, writing weekly essays, doing a service experience, and completing other occasional assignments.",
    "soc_comments": "CS or CSIS senior students only",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3930",
    "section": "Section A, CRN 12435",
    "title": "Computing Career Preparation",
    "credit_hours": "1",
    "meeting_info": "M 5:05pm-5:55pm in LAFAYETTE HALL L411 (1/13 to 5/2)",
    "instructor": "Jillian Duprey",
    "description": "Seminar to help students develop necessary skills for becoming computing professionals and exposes them to different computing careers. Topics include job search strategies, preparation for technical interviews, networking, and developing soft skills. Several guest lectures by computing professionals and alumni. Prerequisite: CS 2240.",
    "section_description": "Seminar to assist students to develop necessary skills for becoming computing professionals and expose them to different computing careers. Topics include job search strategies, preparation for technical interviews, networking, and developing soft skills. Several guest lectures by computing professionals and alumni.",
    "section_expectations": "At the end of this semester, students will be able to:\n1. Practice and strengthen written and verbal communication career readiness\nskills that will help them navigate networking, job search, and interview\nexperiences.\n2. Engage in career exploration research to learn about economic projections, market values, and hiring trends in their interest areas.\n3. Share their updated resumes and cover letters to communicate their\ninterests and strengths and articulate how their academic and professional\nexperiences have shaped their career goals.\n4. Reflect on networking experiences that help them build professional relationships\nand secure professional positions (internship, job, research experience, etc.).\n5. Prepare for and understand various technical and behavioral interview formats\ncommon within multiple technical career paths.\n6. Assess their career readiness using NACE career competencies resources and reflections.\n7. More confidently engage in professional outreach and relationship building.",
    "soc_comments": "Prereqs enforced by the system: CS 2240",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3993",
    "section": "Section A, CRN 16435",
    "title": "Independent Study",
    "credit_hours": "4",
    "instructor": "Lisa Dion",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "soc_comments": "Instructor permission required",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3993",
    "section": "Section B, CRN 16443",
    "title": "IS:Scuba Diver System Design",
    "credit_hours": "1 to 18",
    "instructor": "Lisa Dion",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "soc_comments": "Instructor permission required;\nCredits 3-4",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3993",
    "section": "Section C, CRN 16462",
    "title": "Independent Study",
    "credit_hours": "1 to 18",
    "instructor": "Lisa Dion",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "soc_comments": "Instructor permission required",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3993",
    "section": "Section D, CRN 16473",
    "title": "IS:Evol. algorithms for music",
    "credit_hours": "3",
    "instructor": "Clayton Cafiero",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "soc_comments": "Evolutionary algorithms for music composition",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3993",
    "section": "Section E, CRN 16474",
    "title": "IS:VST dev for audio DSP",
    "credit_hours": "3",
    "meeting_info": "M 9:40am-10:30am in ON CAMPUS SEE NOTES (1/13 to 5/2)",
    "instructor": "Clayton Cafiero",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "soc_comments": "Virtual Studio Technology (VST) plugin development\nfor audio digital signal processing  (DSP)",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3993",
    "section": "Section F, CRN 16484",
    "title": "IS:ML for Business Analytics",
    "credit_hours": "3",
    "instructor": "James Eddy",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3993",
    "section": "Section G, CRN 16485",
    "title": "IS:Neurofeedback Device Dev II",
    "credit_hours": "3",
    "instructor": "James Eddy",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3993",
    "section": "Section H, CRN 16517",
    "title": "IS:Compiler Implementation",
    "credit_hours": "1",
    "instructor": "Jason Hibbeler",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "soc_comments": "Instructor permission required",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 3994",
    "section": "Section A, CRN 16357",
    "title": "Teaching Assistantship",
    "credit_hours": "1",
    "instructor": "Jackie Horton",
    "description": "Undergraduate student service as a teaching assistant, usually in an introductory-level course in the discipline, for which credit is awarded. Offered at department discretion.",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 4996",
    "title": "Undergraduate Honors Thesis",
    "credit_hours": "Varies by section",
    "description": "College honors thesis or other department/program honors, under the supervision of a faculty member. Offered at department discretion. See description of Honors Thesis Program in the College of EM section of this catalog.",
    "soc_comments": "Varies by section",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 5060",
    "section": "Section A, CRN 13697",
    "title": "Advanced Evolutionary Robotics",
    "credit_hours": "3",
    "meeting_info": "TTh 8:30am-9:45am in INNOVATION HALL E430 (1/13 to 5/2)",
    "instructor": "Joshua Bongard",
    "description": "Explores the automated design of autonomous machines using evolutionary algorithms. Covers relevant topics in evolutionary computation, artificial neural networks, robotics, simulation and xenobots. Students complete weekly programming assignments, formulate research a research hypothesis, and use their system to test that hypothesis. Credit not awarded for both CS 5060 and CS 3060. Prerequisite: Graduate student.",
    "section_description": "See link above.",
    "section_expectations": "See link above.",
    "evaluation": "See link above.",
    "soc_comments": "Graduate students only;\nCo-located with CS 3060A, BME 5990 D, CSYS 5990 A;\nTotal combined enrollment: 60",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 5220",
    "section": "Section A, CRN 13716",
    "title": "Advanced Computer Architecture",
    "credit_hours": "3",
    "meeting_info": "MWF 1:10pm-2pm in KALKIN BUILDING 003 (1/13 to 5/2)",
    "instructor": "Jason Hibbeler",
    "description": "Provides a thorough and sophisticated examination of various hardware aspects of modern computers, including: virtual memory, instruction-set architectures, instruction-level parallelism through pipelining, caches and cache coherence, threads, vector processors, and GPUs. Prerequisites: Familiarity with topics of computer organization as would come from the equivalent of CS 2210 or CMPE 2210; Graduate student. Credit not awarded for both CS 5220 and CS 3220 or CMPE 3220. Cross-listed with: CMPE 5220.",
    "section_description": "CS 5220 will provide a thorough and sophisticated examination of various hardware aspects of modern computers, including: virtual memory; instruction-set architectures; instruction-level parallelism through pipelining; caches and cache coherence; threads; vector processors; GPUs and the CUDA platform; and quantum computing if time allows.",
    "section_expectations": "Students will do written exercises; create software programs  that explore different areas of computer hardware; write short assembly-language programs; and write CUDA programs to learn and apply concepts of GPU-based software development.  Students will have the option of using a system in the Deep Green Cluster of the Vermont Advanced Computing Core for the GPU-based development.",
    "evaluation": "Student grades will be based on the exams, the written assignments, the programming projects, and attendance.",
    "soc_comments": "Familiarity with topics of computer organization as would\ncome from the equivalent of CS 2210;\nGraduate student standing;\nCo-located with CS 3220A;\nTotal combined enrollment: 40",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 5240",
    "title": "Advanced Algorithm Design",
    "credit_hours": "3",
    "description": "Studies how to design and analyze computer program algorithms to solve real-world problems. Begins with a review of the concept of algorithm complexity and basic graph algorithms; and then covers algorithm design approaches such as greedy, divide and conquer, dynamic programming, and network flow; then, computational intractability will be treated. Credit not awarded for both CS 5240 and CS 3240. Prerequisite: Familiarity with data structures and elementary algorithms; Graduate student.",
    "soc_comments": "Varies by section",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 5540",
    "section": "Section A, CRN 13699",
    "title": "Advanced Machine Learning",
    "credit_hours": "3",
    "meeting_info": "MWF 8:30am-9:20am in INNOVATION HALL E210 (1/13 to 5/2)",
    "instructor": "Samuel Chevalier",
    "description": "Provides a broad introduction to machine learning and statistical pattern recognition. Topics include: supervised learning (linear regression, logistic regression, neural networks, support vector machines, decision tree, ensemble models, random forest); unsupervised learning (clustering, dimensionality reduction, kernel methods); Also introduces deep learning such as convolutional neural networks and discusses recent applications. Credit not awarded for both CS 5540 and CS 3540. Prerequisites: Knowledge of statistics as from STAT 2510, knowledge of linear algebra as from MATH 2522 or MATH 2544; Graduate student.",
    "section_description": "This course offers an introduction to machine learning and statistical pattern recognition algorithms. It includes a wide array of topics, including supervised learning (covering linear regression, logistic regression, neural networks, support vector machines, decision trees, ensemble models, and random forests), unsupervised learning (clustering, dimensionality reduction, principal component analysis, and kernel methods), and deep learning (featuring convolutional neural networks, basic recurrent neural networks, and LSTMs). We will also introduce data-driven modeling techniques which are useful in the engineering and physical science domains (e.g., physics informed neural networks, neural ODEs, Bayesian neural networks, etc). You will also gain valuable insights and guidance on effectively implementing machine learning algorithms.",
    "section_expectations": "Weekly assignments, Term Project and two Mid-term exams.",
    "evaluation": "\u2022 Assigned homework (30%)\n\u2022 Term Project (30%)\n\u2022 Mid term exams (40%). Two exams will be given during the semester, no final exam.",
    "soc_comments": "Knowledge of statistics as from STAT 2510; knowledge of\nlinear algebra as from MATH 2522 or MATH 2544.\nCo-located with CS 3540, CSYS 5990,\nTotal combined enrollment 50",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 5870",
    "section": "Section A, CRN 13698",
    "title": "Data Science I - Experience",
    "credit_hours": "3",
    "meeting_info": "TTh 2:50pm-4:05pm in PERKINS BUILDING 003 (1/13 to 5/2)",
    "instructor": "Juniper Lovato",
    "description": "Data harvesting, cleaning, and summarizing; working with non-traditional, non-numeric data (social network, natural language textual data, etc.); scientific visualization; advanced data pipelines with a practical focus on real datasets and developing good habits for rigorous and reproducible computational science; Project-based. Credit not awarded for both CS 5870 and CS 3870. Prerequisites: Knowledge of CS 1210 and either STAT 1410 or STAT 2430 required; knowledge of CS 2100 and MATH 2522 or MATH 2544 recommended; Graduate student or Instructor permission. Cross-listed with: STAT 5870, CSYS 5870.",
    "soc_comments": "Graduate student or Instructor permission;\nKnowledge of CS 1210 and either STAT 1410 or STAT 2430;\nKnowledge of CS 2100 and MATH 2522 or MATH 2544 strongly\nrecommended;\nCrosslisted with STAT 5870 A and CSYS 5870 A;\nTotal combined enrollment: 40",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 5993",
    "section": "Section OL1, CRN 16422",
    "title": "IS:A Full Stack Development",
    "credit_hours": "3",
    "meeting_info": "W 4pm-5pm in ONLINE COURSE (1/13 to 5/2)",
    "instructor": "Sarah Nowak",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 6391",
    "title": "Master's Thesis Research",
    "credit_hours": "Varies by section",
    "description": "Research for the Master's Thesis.",
    "soc_comments": "Varies by section",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 6392",
    "section": "Section A, CRN 14798",
    "title": "Master's Project Research",
    "credit_hours": "3",
    "instructor": "Joseph Near",
    "description": "Research for Master's project. Prerequisite: Department permission.",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 6392",
    "section": "Section C, CRN 16464",
    "title": "MPR:Sensor System Architecture",
    "credit_hours": "3",
    "instructor": "Chris Skalka",
    "description": "Research for Master's project. Prerequisite: Department permission.",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 6550",
    "section": "Section A, CRN 13930",
    "title": "Usable Privacy and Security",
    "credit_hours": "3",
    "meeting_info": "TTh 10:05am-11:20am in LAFAYETTE HALL L212 (1/13 to 5/2)",
    "instructor": "Yuanyuan Feng",
    "description": "Covers human factors in privacy and security, usability problems in today's computer security and privacy mechanisms, as well as the human-centered empirical research methods to understand and address these usability problems. Students will work individually or in small groups toward semester-long course research projects. Co-requisite: Knowledge of STAT 1410 or equivalent.",
    "section_description": "From security breaches to data leak, from stolen passwords to data misuse. For all the security and privacy problems we face today, technology alone cannot provide us satisfactory solutions. Human factors play an essential role in ensuring privacy and security in today\u2019s computer systems. This course covers human factors in privacy and security, usability problems in today\u2019s computer security and privacy mechanisms, as well as the human-centered research methods to understand and address these usability problems. \nThis course has a strong focus on empirical research methods and introduces human subject research in computing and engineering fields. Students will gain skills and experiences to design and conduct rigorous empirical research aimed at understanding, evaluating, and/or solving usability issues in computer privacy and security systems. It is particularly suitable for students who are interested in the human aspect of computer privacy and security and who want to strengthen their research skills. Students will work in small groups towards their course research projects.\nPrerequisite: Knowledge of STAT 1410 or equivalent.",
    "section_expectations": "Students are expected to read required course materials before class, participate in class discussion, complete individual/group assignments, and engage in various classroom activities. There will be in-class quizzes and one summative exam.\nDepending on the instructor\u2019s availability, graduate students may continue working on their research projects after the semester under the guidance of the instructor, either as their thesis projects or summer research projects with publication outcomes.\n\nCourse Materials:\nTwo textbooks available as ebooks at UVM libraries\nPrimary textbook: Lazar, J., Feng, J. H., & Hochheiser, H. (2017). Research Methods in Human-Computer Interaction. Morgan Kaufmann.\n\nOther required readings:\nPeer-reviewed research papers in the area of usable privacy and security, which will be made available via BrightSpace",
    "evaluation": "Student grades will be based on: (1) in-class quizzes based on required readings, (2) homework assignments, (3) one summative exam, (4) class participation, and (5) multiple assignments for the course research project including written assignments and presentations.",
    "soc_comments": "Prereq: Knowledge of STAT 1410 or equivalent",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 6990",
    "section": "Section A, CRN 15228",
    "title": "Data Mining",
    "credit_hours": "3",
    "meeting_info": "TTh 8:30am-9:45am in LAFAYETTE HALL L212 (1/13 to 5/2)",
    "instructor": "Byung Lee",
    "description": "Subject will vary from year to year. May be repeated for credit with Instructor permission.",
    "section_description": "Data mining concepts, methods, and implementations.",
    "section_expectations": "Proactive participation in in-class discussions/presentations and reviews of the topical materials.  Graduate standing, preferably with background in algorithms and databases.",
    "evaluation": "Homework summarizing the materials covered, some including performance evaluations of select data mining methods. Scheduled in-class presentations.",
    "soc_comments": "Co-located with CSYS 6990 A;\nTotal combined enrollment: 30",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 6990",
    "section": "Section B, CRN 15413",
    "title": "Adversarial Machine Learning",
    "credit_hours": "3",
    "meeting_info": "TTh 2:50pm-4:05pm in WATERMAN BLDG 402 (1/13 to 5/2)",
    "instructor": "Chris Skalka",
    "description": "Subject will vary from year to year. May be repeated for credit with Instructor permission.",
    "section_description": "Machine learning models can be attacked for the benefit of an adversary. For example, examples can be engineered that look normal to humans but result in model misclassification. If the attacker has access to training data, or the training process itself, \"backdoors\" can be inserted into models that result in misclassifications, or models can be altered in other ways that undermine accuracy. Another concern is that private information in training data can be extracted from models even without direct access to the training data or process. To combat these threats, adversarial defenses for machine learning is a growing field that borrows techniques from cryptography, confidential computing, differential privacy, and other areas to build models that are robust to potential attacks. In this course we will study the technical foundations of adversarial machine learning, where students will gain an understanding of:\n\n- Categories of attacks including adversarial examples, backdoor vulnerabilities, and data poisoning.\n- Privacy concerns including membership inference attacks.\n- Machine learning defenses, including model robustness and data sanitization.\n- Privacy-preserving machine learning, including differentially private stochastic gradient descent and secure aggregation.\n\nThis is a projects-based course where students will conduct hands-on experiments with methods in adversarial machine learning. CS5540 or equivalent is a prerequisite, and students will be expected to have a basic technical understanding of neural networks at that level.",
    "soc_comments": "Prerequisite: CS5540 or instructor permission",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 6990",
    "section": "Section C, CRN 15430",
    "title": "The Surprises of Deep Learning",
    "credit_hours": "3",
    "meeting_info": "TTh 1:15pm-2:30pm in LAFAYETTE HALL L212 (1/13 to 5/2)",
    "instructor": "Nicholas Cheney",
    "description": "Subject will vary from year to year. May be repeated for credit with Instructor permission.",
    "section_description": "Deep Learning has demonstrated incredible empirical results, yet it's not entirely clear how these models learn.  In this highly-interactive seminar, we will review many unintuitive findings in recent journal and conference research papers on deep learning that call into question the traditional narrative on how these models learn, and try to come to a more informed understanding of how and why they are so effective.",
    "section_expectations": "Students will read journal/conference papers prior to class and engage in thoughtful and critical discussions on how these findings impact our understanding of learning mechanisms and learned behaviors in deep neural networks.",
    "evaluation": "Students will be evaluated on the preparation for, and participation in, class discussions -- while providing written reflections summarizing their findings across many such discussions.",
    "soc_comments": "CS 6540 or CSYS 6540 or instructor permission; Students\nwith prior experience/familiarity with deep learning\nare highly recommended to seek instructor permission;\nTotal combined enrollment: 30",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 6990",
    "section": "Section D, CRN 15474",
    "title": "Modeling Complex Systems II",
    "credit_hours": "3",
    "meeting_info": "TTh 2:50pm-4:05pm in LAFAYETTE HALL L107 (1/13 to 5/2)",
    "instructor": "Laurent Hebert-Dufresne",
    "description": "Subject will vary from year to year. May be repeated for credit with Instructor permission.",
    "soc_comments": "Co-located with CSYS 6990 D;\nTotal combined enrollment: 30",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 6993",
    "section": "Section A, CRN 16449",
    "title": "IS:ConversationalAgnts&Privacy",
    "credit_hours": "3",
    "instructor": "Yuanyuan Feng",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion. Prerequisite: Instructor permission.",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 6993",
    "section": "Section B, CRN 16469",
    "title": "IS:Natural Language Processin",
    "credit_hours": "3",
    "meeting_info": "F 12pm-3pm in ON CAMPUS SEE NOTES (1/13 to 5/2)",
    "instructor": "Juniper Lovato",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion. Prerequisite: Instructor permission.",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 6995",
    "title": "Graduate Independent Research",
    "credit_hours": "Varies by section",
    "description": "Graduate student work on individual or small team research projects under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "soc_comments": "Varies by section",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 7491",
    "title": "Doctoral Dissertation Research",
    "credit_hours": "1 to 18",
    "description": "Research for the Doctoral Dissertation.",
    "soc_comments": "Varies by section",
    "semester": "Spring 2025"
  },
  {
    "course_code": "CS 7993",
    "section": "Section A, CRN 16470",
    "title": "IS:Critical Dynamics",
    "credit_hours": "3",
    "instructor": "Laurent Hebert-Dufresne",
    "description": "A course which is tailored to fit the interests of a specific student, which occurs outside the traditional classroom/laboratory setting under the supervision of a faculty member, for which credit is awarded. Offered at department discretion.",
    "soc_comments": "Instructor permission required",
    "semester": "Spring 2025"
  }
]